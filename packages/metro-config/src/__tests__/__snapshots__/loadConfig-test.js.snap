// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loadConfig can load config objects 1`] = `
Object {
  "cacheStores": Array [],
  "cacheVersion": "1.0",
  "maxWorkers": 2,
  "metro": true,
  "projectRoot": "/",
  "reporter": null,
  "resetCache": false,
  "resolver": Object {
    "assetExts": Array [
      "bmp",
      "gif",
      "jpg",
      "jpeg",
      "png",
      "psd",
      "svg",
      "webp",
      "m4v",
      "mov",
      "mp4",
      "mpeg",
      "mpg",
      "webm",
      "aac",
      "aiff",
      "caf",
      "m4a",
      "mp3",
      "wav",
      "html",
      "pdf",
      "otf",
      "ttf",
    ],
    "blacklistRE": /\\(node_modules\\[\\\\/\\\\\\\\\\]react\\[\\\\/\\\\\\\\\\]dist\\[\\\\/\\\\\\\\\\]\\.\\*\\|website\\\\/node_modules\\\\/\\.\\*\\|heapCapture\\\\/bundle\\\\\\.js\\|\\.\\*\\\\/__tests__\\\\/\\.\\*\\)\\$/,
    "extraNodeModules": Object {},
    "hasteImplModulePath": undefined,
    "platforms": Array [
      "ios",
      "android",
      "windows",
      "web",
    ],
    "providesModuleNodeModules": Array [
      "react-native",
      "react-native-windows",
    ],
    "resolveRequest": null,
    "resolverMainFields": Array [
      "browser",
      "main",
    ],
    "sourceExts": Array [
      "js",
      "json",
      "ts",
      "tsx",
    ],
    "useWatchman": true,
  },
  "serializer": Object {
    "createModuleIdFactory": [Function],
    "customSerializer": null,
    "experimentalSerializerHook": [Function],
    "getModulesRunBeforeMainModule": [Function],
    "getPolyfills": [Function],
    "getRunModuleStatement": [Function],
    "polyfillModuleNames": Array [],
    "postProcessBundleSourcemap": [Function],
    "processModuleFilter": [Function],
  },
  "server": Object {
    "enableVisualizer": false,
    "enhanceMiddleware": [Function],
    "port": 8080,
    "useGlobalHotkey": true,
  },
  "stickyWorkers": true,
  "transformer": Object {
    "assetPlugins": Array [],
    "assetRegistryPath": "missing-asset-registry-path",
    "asyncRequireModulePath": "metro/src/lib/bundle-modules/asyncRequire",
    "babelTransformerPath": "metro/src/defaultTransformer",
    "dynamicDepsInPackages": "throwAtRuntime",
    "enableBabelRCLookup": true,
    "enableBabelRuntime": true,
    "getTransformOptions": [Function],
    "minifierConfig": Object {
      "compress": Object {
        "reduce_funcs": false,
      },
      "mangle": Object {
        "toplevel": false,
      },
      "output": Object {
        "ascii_only": true,
        "quote_style": 3,
        "wrap_iife": true,
      },
      "sourceMap": Object {
        "includeSources": false,
      },
      "toplevel": false,
    },
    "minifierPath": "metro-minify-uglify",
    "optimizationSizeLimit": 153600,
    "postMinifyProcess": [Function],
    "transformVariants": Object {
      "default": Object {},
    },
    "workerPath": "metro/src/DeltaBundler/Worker",
  },
  "transformerPath": "",
  "watchFolders": Array [
    "/",
  ],
}
`;

exports[`loadConfig can load the config with a path 1`] = `
Object {
  "cacheStores": Array [],
  "cacheVersion": "1.0",
  "maxWorkers": 2,
  "metro": true,
  "projectRoot": "/",
  "reporter": null,
  "resetCache": false,
  "resolver": Object {
    "assetExts": Array [
      "bmp",
      "gif",
      "jpg",
      "jpeg",
      "png",
      "psd",
      "svg",
      "webp",
      "m4v",
      "mov",
      "mp4",
      "mpeg",
      "mpg",
      "webm",
      "aac",
      "aiff",
      "caf",
      "m4a",
      "mp3",
      "wav",
      "html",
      "pdf",
      "otf",
      "ttf",
    ],
    "blacklistRE": /\\(node_modules\\[\\\\/\\\\\\\\\\]react\\[\\\\/\\\\\\\\\\]dist\\[\\\\/\\\\\\\\\\]\\.\\*\\|website\\\\/node_modules\\\\/\\.\\*\\|heapCapture\\\\/bundle\\\\\\.js\\|\\.\\*\\\\/__tests__\\\\/\\.\\*\\)\\$/,
    "extraNodeModules": Object {},
    "hasteImplModulePath": undefined,
    "platforms": Array [
      "ios",
      "android",
      "windows",
      "web",
    ],
    "providesModuleNodeModules": Array [
      "react-native",
      "react-native-windows",
    ],
    "resolveRequest": null,
    "resolverMainFields": Array [
      "browser",
      "main",
    ],
    "sourceExts": Array [
      "js",
      "json",
      "ts",
      "tsx",
    ],
    "useWatchman": true,
  },
  "serializer": Object {
    "createModuleIdFactory": [Function],
    "customSerializer": null,
    "experimentalSerializerHook": [Function],
    "getModulesRunBeforeMainModule": [Function],
    "getPolyfills": [Function],
    "getRunModuleStatement": [Function],
    "polyfillModuleNames": Array [],
    "postProcessBundleSourcemap": [Function],
    "processModuleFilter": [Function],
  },
  "server": Object {
    "enableVisualizer": false,
    "enhanceMiddleware": [Function],
    "port": 8080,
    "useGlobalHotkey": true,
  },
  "stickyWorkers": true,
  "transformer": Object {
    "assetPlugins": Array [],
    "assetRegistryPath": "missing-asset-registry-path",
    "asyncRequireModulePath": "metro/src/lib/bundle-modules/asyncRequire",
    "babelTransformerPath": "metro/src/defaultTransformer",
    "dynamicDepsInPackages": "throwAtRuntime",
    "enableBabelRCLookup": true,
    "enableBabelRuntime": true,
    "getTransformOptions": [Function],
    "minifierConfig": Object {
      "compress": Object {
        "reduce_funcs": false,
      },
      "mangle": Object {
        "toplevel": false,
      },
      "output": Object {
        "ascii_only": true,
        "quote_style": 3,
        "wrap_iife": true,
      },
      "sourceMap": Object {
        "includeSources": false,
      },
      "toplevel": false,
    },
    "minifierPath": "metro-minify-uglify",
    "optimizationSizeLimit": 153600,
    "postMinifyProcess": [Function],
    "transformVariants": Object {
      "default": Object {},
    },
    "workerPath": "metro/src/DeltaBundler/Worker",
  },
  "transformerPath": "",
  "watchFolders": Array [
    "/",
  ],
}
`;
