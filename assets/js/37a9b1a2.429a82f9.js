"use strict";(self.webpackChunkmetro_website=self.webpackChunkmetro_website||[]).push([[1561],{11824:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"bundling","title":"Bundle Formats","description":"When bundling, each of the modules gets assigned a numeric id, meaning no dynamic requires are supported. Requires are changed by its numeric version, and modules are stored in different possible formats. Three different formats of bundling are supported:","source":"@site/../docs/Bundling.md","sourceDirName":".","slug":"/bundling","permalink":"/docs/bundling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/metro/edit/main/docs/../docs/Bundling.md","tags":[],"version":"current","lastUpdatedAt":1746524656000,"frontMatter":{"id":"bundling","title":"Bundle Formats"},"sidebar":"docs","previous":{"title":"Local Development Setup","permalink":"/docs/local-development"},"next":{"title":"Caching","permalink":"/docs/caching"}}');var t=i(74848),l=i(28453);const s={id:"bundling",title:"Bundle Formats"},o=void 0,r={},a=[{value:"Plain bundle",id:"plain-bundle",level:2},{value:"Indexed RAM bundle",id:"indexed-ram-bundle",level:2},{value:"File RAM bundle",id:"file-ram-bundle",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"When bundling, each of the modules gets assigned a numeric id, meaning no dynamic requires are supported. Requires are changed by its numeric version, and modules are stored in different possible formats. Three different formats of bundling are supported:"}),"\n",(0,t.jsx)(n.h2,{id:"plain-bundle",children:"Plain bundle"}),"\n",(0,t.jsxs)(n.p,{children:["This is the standard bundling format. In this format, all files are wrapped with a function call, then added to the global file. This is useful for environments that expect a JS only bundle (e.g. a browser). Just requiring the entry point with the ",(0,t.jsx)(n.code,{children:".bundle"})," extension should trigger a build of it."]}),"\n",(0,t.jsx)(n.h2,{id:"indexed-ram-bundle",children:"Indexed RAM bundle"}),"\n",(0,t.jsx)(n.p,{children:"This format composes the bundle as a binary file, which format has the following parts (all numbers are expressed in Little Endian):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A magic number: a ",(0,t.jsx)(n.code,{children:"uint32"})," must be located at the beginning of the file, with the value ",(0,t.jsx)(n.code,{children:"0xFB0BD1E5"}),". This is used to verify the file."]}),"\n",(0,t.jsxs)(n.li,{children:["An offset table: the table is a sequence of ",(0,t.jsx)(n.code,{children:"uint32"})," pairs, with a header","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For the header, two ",(0,t.jsx)(n.code,{children:"uint32"}),"s can be found: the length of the table, and the length of the startup code."]}),"\n",(0,t.jsx)(n.li,{children:"For the pairs, they represent the offset in the file and the length of code module, in bytes."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Each of the modules, finished by a null byte (",(0,t.jsx)(n.code,{children:"\\0"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"` 0                   1                   2                   3                   4                   5                   6\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Magic number                         |                          Header size                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Startup code size                       |                        Module 0 offset                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Module 0 length                        |                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                               +\n|                                                                                                                               |\n+                                                              ...                                                              +\n|                                                                                                                               |\n+                                                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |                        Module n offset                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Module n length                        | Module 0 code | Module 0 code |      ...      |       \\0      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Module 1 code | Module 1 code |      ...      |       \\0      |                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                               +\n|                                                                                                                               |\n+                                                              ...                                                              +\n|                                                                                                                               |\n+                                                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               | Module n code | Module n code |      ...      |       \\0      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+`\n"})}),"\n",(0,t.jsx)(n.p,{children:"This structure is optimal for an environment that is able to load all code in memory at once:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["By using the offset table, one can load any module in constant time, where the code for module ",(0,t.jsx)(n.code,{children:"x"})," is located at ",(0,t.jsx)(n.code,{children:"file[(x + 3) * sizeof(uint32)]"}),". Since there is a null character (",(0,t.jsx)(n.code,{children:"\\0"}),") separating all modules, usually length does not even need to be used, and the module can be loaded directly as an ASCIIZ string."]}),"\n",(0,t.jsxs)(n.li,{children:["Startup code is always found at ",(0,t.jsx)(n.code,{children:"file[sizeof(uint32)]"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This bundling is usually used by iOS."}),"\n",(0,t.jsx)(n.h2,{id:"file-ram-bundle",children:"File RAM bundle"}),"\n",(0,t.jsxs)(n.p,{children:["Each module is stored as a file, with the name ",(0,t.jsx)(n.code,{children:"js-modules/${id}.js"}),", plus an extra file called ",(0,t.jsx)(n.code,{children:"UNBUNDLE"})," is created, which its only content is the magic number, ",(0,t.jsx)(n.code,{children:"0xFB0BD1E5"}),". Note that the ",(0,t.jsx)(n.code,{children:"UNBUNDLE"})," file is created at the root.\nThis bundling is usually used by Android, since package contents are zipped, and access to a zipped file is much faster. If the indexed format was used instead, all the bundled should be unzipped at once to get the code for the corresponding module."]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);