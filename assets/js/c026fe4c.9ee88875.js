"use strict";(self.webpackChunkmetro_website=self.webpackChunkmetro_website||[]).push([[6298],{8806:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"concepts","title":"Concepts","description":"Metro is a JavaScript bundler. It takes in an entry file and various options, and gives you back a single JavaScript file that includes all your code and its dependencies.","source":"@site/../docs/Concepts.md","sourceDirName":".","slug":"/concepts","permalink":"/docs/concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/metro/edit/main/docs/../docs/Concepts.md","tags":[],"version":"current","lastUpdatedAt":1741005563000,"frontMatter":{"id":"concepts","title":"Concepts"},"sidebar":"docs","previous":{"title":"Getting Started","permalink":"/docs/getting-started"},"next":{"title":"Bundling API","permalink":"/docs/api"}}');var s=n(74848),o=n(28453);const a={id:"concepts",title:"Concepts"},r=void 0,l={},d=[{value:"Resolution",id:"resolution",level:3},{value:"Transformation",id:"transformation",level:3},{value:"Serialization",id:"serialization",level:3},{value:"Modules",id:"modules",level:2}];function c(e){const t={h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Metro is a JavaScript bundler. It takes in an entry file and various options, and gives you back a single JavaScript file that includes all your code and its dependencies."}),"\n",(0,s.jsx)(t.p,{children:"Metro has three separate stages in its bundling process:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Resolution"}),"\n",(0,s.jsx)(t.li,{children:"Transformation"}),"\n",(0,s.jsx)(t.li,{children:"Serialization"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"resolution",children:"Resolution"}),"\n",(0,s.jsx)(t.p,{children:"Metro needs to build a graph of all the modules that are required from the entry point. To find which file is required from another file Metro uses a resolver. In reality this stage happens in parallel with the transformation stage."}),"\n",(0,s.jsx)(t.h3,{id:"transformation",children:"Transformation"}),"\n",(0,s.jsx)(t.p,{children:"All modules go through a transformer. A transformer is responsible for converting (transpiling) a module to a format that is understandable by the target platform (eg. React Native). Transformation of modules happens in parallel based on the amount of cores that you have."}),"\n",(0,s.jsx)(t.h3,{id:"serialization",children:"Serialization"}),"\n",(0,s.jsx)(t.p,{children:"As soon as all the modules have been transformed they will be serialized. A serializer combines the modules to generate one or multiple bundles. A bundle is literally a bundle of modules combined into a single JavaScript file."}),"\n",(0,s.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,s.jsx)(t.p,{children:"Metro has been split out into multiple modules corresponding to every step in the flow, each with their own responsibility. This means that we have a resolver, transformer, and serializer. These modules can be swapped out depending on your needs."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);