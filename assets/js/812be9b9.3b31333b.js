"use strict";(self.webpackChunkmetro_website=self.webpackChunkmetro_website||[]).push([[4151],{64666:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"resolution","title":"Module Resolution","description":"Module resolution is the process of translating module names to module paths at build time. For example, if your project contains the code:","source":"@site/../docs/Resolution.md","sourceDirName":".","slug":"/resolution","permalink":"/docs/resolution","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/metro/edit/main/docs/../docs/Resolution.md","tags":[],"version":"current","lastUpdatedAt":1746528983000,"frontMatter":{"id":"resolution","title":"Module Resolution"},"sidebar":"docs","previous":{"title":"Caching","permalink":"/docs/caching"},"next":{"title":"Source Map Format","permalink":"/docs/source-map-format"}}');var i=n(74848),l=n(28453);const o={id:"resolution",title:"Module Resolution"},t=void 0,d={},a=[{value:"Resolution algorithm",id:"resolution-algorithm",level:2},{value:"Resolution types",id:"resolution-types",level:3},{value:"Source file",id:"source-file",level:4},{value:"Asset files",id:"asset-files",level:4},{value:"Empty module",id:"empty-module",level:4},{value:"Algorithm",id:"algorithm",level:3},{value:"RESOLVE",id:"resolve",level:4},{value:"RESOLVE_MODULE",id:"resolve_module",level:4},{value:"RESOLVE_PACKAGE",id:"resolve_package",level:4},{value:"RESOLVE_PACKAGE_EXPORTS",id:"resolve_package_exports",level:4},{value:"RESOLVE_FILE",id:"resolve_file",level:4},{value:"RESOLVE_ASSET",id:"resolve_asset",level:4},{value:"RESOLVE_HASTE",id:"resolve_haste",level:4},{value:"BROWSER_SPEC_REDIRECTION",id:"browser_spec_redirection",level:4},{value:"Resolution context",id:"resolution-context",level:3},{value:"<code>assetExts: $ReadOnlySet&lt;string&gt;</code>",id:"assetexts-readonlysetstring",level:4},{value:"<code>dev: boolean</code>",id:"dev-boolean",level:4},{value:'<code>doesFileExist: string =&gt; boolean</code> <div class="label deprecated">Deprecated</div>',id:"doesfileexist-string--boolean-deprecated",level:4},{value:"<code>fileSystemLookup: string =&gt; {exists: true, type: &#39;f&#39;|&#39;d&#39;, realPath: string} | {exists: false}</code>",id:"filesystemlookup-string--exists-true-type-fd-realpath-string--exists-false",level:4},{value:"<code>nodeModulesPaths: $ReadOnlyArray&lt;string&gt;</code>",id:"nodemodulespaths-readonlyarraystring",level:4},{value:"<code>preferNativePlatform: boolean</code>",id:"prefernativeplatform-boolean",level:4},{value:'<code>redirectModulePath: string =&gt; string | false</code> <div class="label deprecated">Deprecated</div>',id:"redirectmodulepath-string--string--false-deprecated",level:4},{value:"<code>resolveAsset: (dirPath: string, assetName: string, extension: string) =&gt; ?$ReadOnlyArray&lt;string&gt;</code>",id:"resolveasset-dirpath-string-assetname-string-extension-string--readonlyarraystring",level:4},{value:"<code>sourceExts: $ReadOnlyArray&lt;string&gt;</code>",id:"sourceexts-readonlyarraystring",level:4},{value:"<code>mainFields: $ReadOnlyArray&lt;string&gt;</code>",id:"mainfields-readonlyarraystring",level:4},{value:"<code>getPackage: string =&gt; PackageJson</code>",id:"getpackage-string--packagejson",level:4},{value:'<code>getPackageForModule: (absoluteModulePath: string) =&gt; ?PackageInfo</code> <div class="label deprecated">Deprecated</div>',id:"getpackageformodule-absolutemodulepath-string--packageinfo-deprecated",level:4},{value:"<code>isESMImport?: boolean</code>",id:"isesmimport-boolean",level:4},{value:"<code>resolveHasteModule: string =&gt; ?string</code>",id:"resolvehastemodule-string--string",level:4},{value:"<code>resolveHastePackage: string =&gt; ?string</code>",id:"resolvehastepackage-string--string",level:4},{value:"<code>allowHaste: boolean</code>",id:"allowhaste-boolean",level:4},{value:"<code>disableHierarchicalLookup: boolean</code>",id:"disablehierarchicallookup-boolean",level:4},{value:"<code>extraNodeModules: ?{[string]: string}</code>",id:"extranodemodules-string-string",level:4},{value:"<code>originModulePath: string</code>",id:"originmodulepath-string",level:4},{value:"<code>customResolverOptions: {[string]: mixed}</code>",id:"customresolveroptions-string-mixed",level:4},{value:"<code>resolveRequest: CustomResolver</code>",id:"resolverequest-customresolver",level:4},{value:"<code>dependency: ?Dependency</code>",id:"dependency-dependency",level:4},{value:"Caching",id:"caching",level:2}];function c(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Module resolution is the process of translating module names to module paths at build time. For example, if your project contains the code:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:"// src/App.js\nimport {View} from 'react-native';\n// ...\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Metro needs to know where in your project to load the ",(0,i.jsx)(s.code,{children:"react-native"})," module from. This will typically resolve to something like ",(0,i.jsx)(s.code,{children:"node_modules/react-native/index.js"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Likewise, if your project contains the (similar) code:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:"// src/App.js\nimport Comp from './Component';\n// ...\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Metro needs to understand that you are referring to, say, ",(0,i.jsx)(s.code,{children:"src/Component.js"}),", and not another file named ",(0,i.jsx)(s.code,{children:"Component"})," that may also exist elsewhere."]}),"\n",(0,i.jsxs)(s.p,{children:["Metro implements a version of ",(0,i.jsx)(s.a,{href:"https://nodejs.org/api/modules.html#loading-from-node_modules-folders",children:"Node's module resolution algorithm"}),", augmented with additional Metro-specific features."]}),"\n",(0,i.jsx)(s.p,{children:"These Metro-specific features include:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Haste"}),": An opt-in mechanism for importing modules by their globally-unique name anywhere in the project, e.g. ",(0,i.jsx)(s.code,{children:"import Foo from 'Foo'"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Platform extensions"}),": Used by ",(0,i.jsx)(s.a,{href:"https://reactnative.dev/docs/platform-specific-code#platform-specific-extensions",children:"React Native"})," to allow developers to write platform-specific versions of their JavaScript modules."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Asset extensions and image resolutions"}),": Used by ",(0,i.jsx)(s.a,{href:"https://reactnative.dev/docs/images#static-image-resources",children:"React Native"})," to automatically select the best version of an image asset based on the device's screen density at runtime."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Custom resolvers"}),": Metro integrators can provide their own resolver implementations to override almost everything about how modules are resolved."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"resolution-algorithm",children:"Resolution algorithm"}),"\n",(0,i.jsxs)(s.p,{children:["Given a ",(0,i.jsx)(s.a,{href:"#resolution-context",children:"resolution context"})," ",(0,i.jsx)(s.em,{children:"context"}),", a module name ",(0,i.jsx)(s.em,{children:"moduleName"}),", and an optional platform identifier ",(0,i.jsx)(s.em,{children:"platform"}),", Metro's resolver performs ",(0,i.jsx)(s.a,{href:"#resolve",children:(0,i.jsx)(s.strong,{children:"RESOLVE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),"), which either returns one of the ",(0,i.jsx)(s.a,{href:"#resolution-types",children:"resolution types"}),", or throws an error."]}),"\n",(0,i.jsx)(s.h3,{id:"resolution-types",children:"Resolution types"}),"\n",(0,i.jsx)(s.h4,{id:"source-file",children:"Source file"}),"\n",(0,i.jsx)(s.p,{children:"The request is resolved to some absolute path representing a physical file on disk."}),"\n",(0,i.jsx)(s.h4,{id:"asset-files",children:"Asset files"}),"\n",(0,i.jsx)(s.p,{children:"The request is resolved to one or more absolute paths representing physical files on disk."}),"\n",(0,i.jsx)(s.h4,{id:"empty-module",children:"Empty module"}),"\n",(0,i.jsxs)(s.p,{children:["The request is resolved to a built-in empty module, namely the one specified in ",(0,i.jsx)(s.a,{href:"/docs/configuration#emptymodulepath",children:(0,i.jsx)(s.code,{children:"resolver.emptyModulePath"})}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"algorithm",children:"Algorithm"}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["These are the rules that Metro's default resolver follows. Refer to ",(0,i.jsxs)(s.a,{href:"https://github.com/facebook/metro/blob/main/packages/metro-resolver/src/resolve.js",children:[(0,i.jsx)(s.code,{children:"metro-resolver"}),"'s source code"]})," for more details."]})}),"\n",(0,i.jsx)(s.h4,{id:"resolve",children:"RESOLVE"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If a ",(0,i.jsx)(s.a,{href:"#resolverequest-customresolver",children:"custom resolver"})," is defined, then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Return the result of the custom resolver."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"moduleName"})," is an absolute path, or equal to ",(0,i.jsx)(s.code,{children:"'.'"})," or ",(0,i.jsx)(s.code,{children:"'..'"}),", or begins ",(0,i.jsx)(s.code,{children:"'./'"})," or ",(0,i.jsx)(s.code,{children:"'../'"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Let ",(0,i.jsx)(s.em,{children:"absoluteModuleName"})," be ",(0,i.jsx)(s.em,{children:"moduleName"})," if it is absolute path, otherwise the result of prepending the current directory (i.e. parent of ",(0,i.jsx)(s.a,{href:"#originmodulepath-string",children:(0,i.jsx)(s.code,{children:"context.originModulePath"})}),") with ",(0,i.jsx)(s.em,{children:"moduleName"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_module",children:(0,i.jsx)(s.strong,{children:"RESOLVE_MODULE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"absoluteModuleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),"), or continue."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"moduleName"})," begins ",(0,i.jsx)(s.code,{children:"'#'"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Throw an error. This will be replaced with subpath imports support in a non-breaking future release."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Apply ",(0,i.jsx)(s.a,{href:"#browser_spec_redirection",children:(0,i.jsx)(s.strong,{children:"BROWSER_SPEC_REDIRECTION"})})," to ",(0,i.jsx)(s.em,{children:"moduleName"}),". If this is ",(0,i.jsx)(s.code,{children:"false"}),":","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Return the empty module."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.a,{href:"#allowhaste-boolean",children:"Haste resolutions are allowed"}),", then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Get the result of ",(0,i.jsx)(s.a,{href:"#resolve_haste",children:(0,i.jsx)(s.strong,{children:"RESOLVE_HASTE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n",(0,i.jsxs)(s.li,{children:["If resolved as a Haste package path, then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Perform the algorithm for resolving a path (step 2 above). Throw an error if this resolution fails.\nFor example, if the Haste package path for ",(0,i.jsx)(s.code,{children:"'a/b'"})," is ",(0,i.jsx)(s.code,{children:"foo/package.json"}),", perform step 2 as if ",(0,i.jsx)(s.em,{children:"moduleName"})," was ",(0,i.jsx)(s.code,{children:"foo/c"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.a,{href:"#disableHierarchicalLookup-boolean",children:(0,i.jsx)(s.code,{children:"context.disableHierarchicalLookup"})})," is not ",(0,i.jsx)(s.code,{children:"true"}),", then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Try resolving ",(0,i.jsx)(s.em,{children:"moduleName"})," under ",(0,i.jsx)(s.code,{children:"node_modules"})," from the current directory (i.e. parent of ",(0,i.jsx)(s.a,{href:"#originmodulepath-string",children:(0,i.jsx)(s.code,{children:"context.originModulePath"})}),") up to the root directory."]}),"\n",(0,i.jsxs)(s.li,{children:["Perform ",(0,i.jsx)(s.a,{href:"#resolve_package",children:(0,i.jsx)(s.strong,{children:"RESOLVE_PACKAGE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"modulePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),") for each candidate path."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["For each element ",(0,i.jsx)(s.em,{children:"nodeModulesPath"})," of ",(0,i.jsx)(s.a,{href:"#nodemodulespaths-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"context.nodeModulesPaths"})}),":","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Try resolving ",(0,i.jsx)(s.em,{children:"moduleName"})," under ",(0,i.jsx)(s.em,{children:"nodeModulesPath"})," as if the latter was another ",(0,i.jsx)(s.code,{children:"node_modules"})," directory (similar to step 5 above)."]}),"\n",(0,i.jsxs)(s.li,{children:["Perform ",(0,i.jsx)(s.a,{href:"#resolve_package",children:(0,i.jsx)(s.strong,{children:"RESOLVE_PACKAGE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"modulePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),") for each candidate path."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.a,{href:"#extranodemodules-string-string",children:(0,i.jsx)(s.code,{children:"context.extraNodeModules"})})," is set:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Split ",(0,i.jsx)(s.em,{children:"moduleName"})," into a package name (including an optional ",(0,i.jsx)(s.a,{href:"https://docs.npmjs.com/cli/v8/using-npm/scope",children:"scope"}),") and relative path."]}),"\n",(0,i.jsxs)(s.li,{children:["Look up the package name in ",(0,i.jsx)(s.a,{href:"#extranodemodules-string-string",children:(0,i.jsx)(s.code,{children:"context.extraNodeModules"})}),". If found, then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Construct a path ",(0,i.jsx)(s.em,{children:"modulePath"})," by replacing the package name part of ",(0,i.jsx)(s.em,{children:"moduleName"})," with the value found in ",(0,i.jsx)(s.a,{href:"#extranodemodules-string-string",children:(0,i.jsx)(s.code,{children:"context.extraNodeModules"})})]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_package",children:(0,i.jsx)(s.strong,{children:"RESOLVE_PACKAGE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"modulePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"If no valid resolution has been found, throw a resolution failure error."}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_module",children:"RESOLVE_MODULE"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Let ",(0,i.jsx)(s.em,{children:"filePath"})," be the result of applying ",(0,i.jsx)(s.a,{href:"#browser_spec_redirection",children:(0,i.jsx)(s.strong,{children:"BROWSER_SPEC_REDIRECTION"})})," to ",(0,i.jsx)(s.em,{children:"moduleName"}),". This may locate a replacement subpath from a containing ",(0,i.jsx)(s.code,{children:"package.json"})," file based on the ",(0,i.jsxs)(s.a,{href:"https://github.com/defunctzombie/package-browser-field-spec",children:[(0,i.jsx)(s.code,{children:"browser"})," field spec"]}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_file",children:(0,i.jsx)(s.strong,{children:"RESOLVE_FILE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),"), or continue."]}),"\n",(0,i.jsxs)(s.li,{children:["Otherwise, let ",(0,i.jsx)(s.em,{children:"dirPath"})," be the directory path of ",(0,i.jsx)(s.em,{children:"filePath"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["If a file ",(0,i.jsx)(s.em,{children:"dirPath"})," + ",(0,i.jsx)(s.code,{children:"'package.json'"})," exists, resolve based on the ",(0,i.jsxs)(s.a,{href:"https://github.com/defunctzombie/package-browser-field-spec",children:[(0,i.jsx)(s.code,{children:"browser"})," field spec"]}),":","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Let ",(0,i.jsx)(s.em,{children:"mainModulePath"})," be the result of reading the package's entry path using ",(0,i.jsx)(s.a,{href:"#mainfields-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"context.mainFields"})}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_file",children:(0,i.jsx)(s.strong,{children:"RESOLVE_FILE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"mainModulePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),"), or continue."]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_file",children:(0,i.jsx)(s.strong,{children:"RESOLVE_FILE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"mainModulePath"})," + ",(0,i.jsx)(s.code,{children:"'/index'"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n",(0,i.jsx)(s.li,{children:"Throw an error if no resolution could be found."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_package",children:"RESOLVE_PACKAGE"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.code,{children:"context.enablePackageExports"})," is enabled, and a containing ",(0,i.jsx)(s.code,{children:"package.json"})," file contains the field ",(0,i.jsx)(s.code,{children:'"exports"'}),", get result of ",(0,i.jsx)(s.a,{href:"#resolve_package-exports",children:(0,i.jsx)(s.strong,{children:"RESOLVE_PACKAGE_EXPORTS"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"packagePath"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"exportsField"}),", ",(0,i.jsx)(s.em,{children:"platform"}),").","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"If resolved path exists, return result."}),"\n",(0,i.jsx)(s.li,{children:"Else, log either a package configuration or package encapsulation warning."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_module",children:(0,i.jsx)(s.strong,{children:"RESOLVE_MODULE"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_package_exports",children:"RESOLVE_PACKAGE_EXPORTS"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"packagePath"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"exportsField"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Resolves a package subpath based on the ",(0,i.jsx)(s.a,{href:"https://nodejs.org/docs/latest-v19.x/api/packages.html#package-entry-points",children:"Package Entry Points spec"})," (the ",(0,i.jsx)(s.code,{children:'"exports"'})," field), when ",(0,i.jsx)(s.a,{href:"./configuration#unstable_enablepackageexports-experimental",children:(0,i.jsx)(s.code,{children:"resolver.unstable_enablePackageExports"})})," is enabled."]}),"\n"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Let ",(0,i.jsx)(s.em,{children:"subpath"})," be the relative path from ",(0,i.jsx)(s.em,{children:"packagePath"})," to ",(0,i.jsx)(s.em,{children:"filePath"}),", or ",(0,i.jsx)(s.code,{children:"'.'"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"exportsField"})," contains an invalid configuration or values, raise an ",(0,i.jsx)(s.code,{children:"InvalidPackageConfigurationError"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"subpath"})," is not defined by ",(0,i.jsx)(s.em,{children:"exportsField"}),", raise a ",(0,i.jsx)(s.code,{children:"PackagePathNotExportedError"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Let ",(0,i.jsx)(s.em,{children:"target"})," be the result of matching ",(0,i.jsx)(s.em,{children:"subpath"})," in ",(0,i.jsx)(s.em,{children:"exportsField"})," after applying any ",(0,i.jsx)(s.a,{href:"https://nodejs.org/docs/latest-v19.x/api/packages.html#conditional-exports",children:"conditional exports"})," and/or substituting a ",(0,i.jsx)(s.a,{href:"https://nodejs.org/docs/latest-v19.x/api/packages.html#subpath-patterns",children:"subpath pattern match"}),".","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Condition names will be asserted from the union of ",(0,i.jsx)(s.code,{children:"'default'"}),", ",(0,i.jsx)(s.code,{children:"'import'"})," OR ",(0,i.jsx)(s.code,{children:"'require'"})," according to ",(0,i.jsx)(s.code,{children:"context.isESMImport"}),", ",(0,i.jsx)(s.code,{children:"context.unstable_conditionNames"})," and ",(0,i.jsx)(s.code,{children:"context.unstable_conditionNamesByPlatform"})," for ",(0,i.jsx)(s.em,{children:"platform"}),", in the order defined by ",(0,i.jsx)(s.em,{children:"exportsField"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"target"})," refers to an ",(0,i.jsx)(s.a,{href:"#assetexts-readonlysetstring",children:"asset"}),", then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_asset",children:(0,i.jsx)(s.strong,{children:"RESOLVE_ASSET"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"target"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return ",(0,i.jsx)(s.em,{children:"target"})," as a ",(0,i.jsx)(s.a,{href:"#source-file",children:"source file resolution"})," ",(0,i.jsx)(s.strong,{children:"without"})," applying redirections or trying any platform or extension variants."]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_file",children:"RESOLVE_FILE"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If the path refers to an ",(0,i.jsx)(s.a,{href:"#assetexts-readonlysetstring",children:"asset"}),", then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Return the result of ",(0,i.jsx)(s.a,{href:"#resolve_asset",children:(0,i.jsx)(s.strong,{children:"RESOLVE_ASSET"})}),"(",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Otherwise, if the path ",(0,i.jsx)(s.a,{href:"#doesfileexist-string--boolean",children:"exists"}),", then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Try all platform and extension variants in sequence. Return a ",(0,i.jsx)(s.a,{href:"#source-file",children:"source file resolution"})," for the first one that ",(0,i.jsx)(s.a,{href:"#doesfileexist-string--boolean",children:"exists"})," after applying ",(0,i.jsx)(s.a,{href:"#browser_spec_redirection",children:(0,i.jsx)(s.strong,{children:"BROWSER_SPEC_REDIRECTION"})}),". For example, if ",(0,i.jsx)(s.em,{children:"platform"})," is ",(0,i.jsx)(s.code,{children:"android"})," and ",(0,i.jsx)(s.a,{href:"#sourceexts-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"context.sourceExts"})})," is ",(0,i.jsx)(s.code,{children:"['js', 'jsx']"}),", try this sequence of potential file names:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.android.js'"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.native.js'"})," (if ",(0,i.jsx)(s.a,{href:"#prefernativeplatform-boolean",children:(0,i.jsx)(s.code,{children:"context.preferNativePlatform"})})," is ",(0,i.jsx)(s.code,{children:"true"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.js'"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.android.jsx'"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.native.jsx'"})," (if ",(0,i.jsx)(s.a,{href:"#prefernativeplatform-boolean",children:(0,i.jsx)(s.code,{children:"context.preferNativePlatform"})})," is ",(0,i.jsx)(s.code,{children:"true"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"moduleName"})," + ",(0,i.jsx)(s.code,{children:"'.jsx'"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_asset",children:"RESOLVE_ASSET"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"filePath"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Use ",(0,i.jsx)(s.a,{href:"#resolveasset-dirpath-string-assetname-string-extension-string--readonlyarraystring",children:(0,i.jsx)(s.code,{children:"context.resolveAsset"})})," to collect all asset variants."]}),"\n",(0,i.jsxs)(s.li,{children:["Return an ",(0,i.jsx)(s.a,{href:"#asset-files",children:"asset resolution"})," containing the collected asset paths."]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"resolve_haste",children:"RESOLVE_HASTE"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),", ",(0,i.jsx)(s.em,{children:"platform"}),")"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Try resolving ",(0,i.jsx)(s.em,{children:"moduleName"})," as a ",(0,i.jsx)(s.a,{href:"#resolvehastemodule-string--string",children:"Haste module"}),".\nIf found, then","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Return result as a ",(0,i.jsx)(s.a,{href:"#source-file",children:"source file resolution"})," ",(0,i.jsx)(s.strong,{children:"without"})," applying redirections or trying any platform or extension variants."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Try resolving ",(0,i.jsx)(s.em,{children:"moduleName"})," as a ",(0,i.jsx)(s.a,{href:"#resolvehastepackage-string--string",children:"Haste (global) package"}),", or a path ",(0,i.jsx)(s.em,{children:"relative"})," to a Haste package.\nFor example, if ",(0,i.jsx)(s.em,{children:"moduleName"})," is ",(0,i.jsx)(s.code,{children:"'a/b/c'"}),", try the following potential Haste package names:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"'a/b/c'"}),", relative path ",(0,i.jsx)(s.code,{children:"''"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"'a/b'"}),", relative path ",(0,i.jsx)(s.code,{children:"'./c'"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"'a'"}),", with relative path ",(0,i.jsx)(s.code,{children:"'./b/c'"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"browser_spec_redirection",children:"BROWSER_SPEC_REDIRECTION"}),"\n",(0,i.jsxs)(s.p,{children:["Parameters: (",(0,i.jsx)(s.em,{children:"context"}),", ",(0,i.jsx)(s.em,{children:"moduleName"}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["Based on ",(0,i.jsx)(s.a,{href:"https://github.com/defunctzombie/package-browser-field-spec",children:(0,i.jsx)(s.code,{children:"defunctzombie/package-browser-field-spec"})}),", apply redirections to specifiers, based on the closest ",(0,i.jsx)(s.code,{children:"package.json"})," to the origin or target module."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Find the closest ",(0,i.jsx)(s.code,{children:"package.json"})," to ",(0,i.jsx)(s.em,{children:"moduleName"}),", if ",(0,i.jsx)(s.em,{children:"moduleName"})," is absolute, or to ",(0,i.jsx)(s.a,{href:"#originmodulepath-string",children:(0,i.jsx)(s.code,{children:"context.originModulePath"})})," otherwise, stopping at any ",(0,i.jsx)(s.code,{children:"node_modules"}),". Let ",(0,i.jsx)(s.em,{children:"packageScope"})," be its containing directory."]}),"\n",(0,i.jsxs)(s.li,{children:["If none is found, return ",(0,i.jsx)(s.em,{children:"moduleName"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Define ",(0,i.jsx)(s.em,{children:"subpath"}),":","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"moduleName"})," begins ",(0,i.jsx)(s.code,{children:"'.'"}),", consider it relative to ",(0,i.jsx)(s.a,{href:"#originmodulepath-string",children:(0,i.jsx)(s.code,{children:"context.originModulePath"})})," and let ",(0,i.jsx)(s.em,{children:"subpath"})," be the same path relative to ",(0,i.jsx)(s.em,{children:"packageScope"}),", prefixed ",(0,i.jsx)(s.code,{children:"'./'"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Else if ",(0,i.jsx)(s.em,{children:"moduleName"})," is absolute, let ",(0,i.jsx)(s.em,{children:"subpath"})," be ",(0,i.jsx)(s.em,{children:"moduleName"})," relative to ",(0,i.jsx)(s.em,{children:"packageScope"}),", prefixed ",(0,i.jsx)(s.code,{children:"'./'"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Else let ",(0,i.jsx)(s.em,{children:"subpath"})," be ",(0,i.jsx)(s.em,{children:"moduleName"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Taking each of ",(0,i.jsx)(s.a,{href:"#mainfields-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"context.mainFields"})})," as a key, let ",(0,i.jsx)(s.em,{children:"mainFieldValue"})," be the value at that key within the ",(0,i.jsx)(s.code,{children:"package.json"})," at ",(0,i.jsx)(s.em,{children:"packageScope"}),".","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"mainFieldValue"})," is an object, let ",(0,i.jsx)(s.em,{children:"expandedSubPath"})," range over ",(0,i.jsx)(s.em,{children:"subpath"}),", ",(0,i.jsx)(s.em,{children:"subpath"})," + ",(0,i.jsx)(s.code,{children:"'.js'"})," and ",(0,i.jsx)(s.em,{children:"subpath"})," + ",(0,i.jsx)(s.code,{children:"'.json'"}),".","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"mainFieldValue"})," has the key ",(0,i.jsx)(s.em,{children:"expandedSubpath"}),", let ",(0,i.jsx)(s.em,{children:"redirectedPath"})," be its value, else continue."]}),"\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"moduleName"})," is absolute or begins ",(0,i.jsx)(s.code,{children:"'.'"}),", and ",(0,i.jsx)(s.em,{children:"redirectedPath"})," is a string:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If ",(0,i.jsx)(s.em,{children:"redirectedPath"})," is an absolute path, return ",(0,i.jsx)(s.em,{children:"redirectedPath"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Return ",(0,i.jsx)(s.em,{children:"packageScope"})," joined with ",(0,i.jsx)(s.em,{children:"redirectedPath"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return ",(0,i.jsx)(s.em,{children:"redirectedPath"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Return ",(0,i.jsx)(s.em,{children:"moduleName"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"resolution-context",children:"Resolution context"}),"\n",(0,i.jsx)(s.h4,{id:"assetexts-readonlysetstring",children:(0,i.jsx)(s.code,{children:"assetExts: $ReadOnlySet<string>"})}),"\n",(0,i.jsxs)(s.p,{children:["The set of file extensions used to identify asset files. Defaults to ",(0,i.jsx)(s.a,{href:"/docs/configuration#assetexts",children:(0,i.jsx)(s.code,{children:"resolver.assetExts"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"dev-boolean",children:(0,i.jsx)(s.code,{children:"dev: boolean"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"true"})," if the resolution is for a development bundle, or ",(0,i.jsx)(s.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsxs)(s.h4,{id:"doesfileexist-string--boolean-deprecated",children:[(0,i.jsx)(s.code,{children:"doesFileExist: string => boolean"})," ",(0,i.jsx)("div",{class:"label deprecated",children:"Deprecated"})]}),"\n",(0,i.jsxs)(s.p,{children:["Returns ",(0,i.jsx)(s.code,{children:"true"})," if the file with the given path exists, or ",(0,i.jsx)(s.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsxs)(s.p,{children:["The default implementation wraps ",(0,i.jsx)(s.a,{href:"#filesystemlookup-string--exists-true-type-fd-realpath-string--exists-false",children:(0,i.jsx)(s.code,{children:"fileSystemLookup"})})," - prefer using that directly."]}),"\n",(0,i.jsx)(s.h4,{id:"filesystemlookup-string--exists-true-type-fd-realpath-string--exists-false",children:(0,i.jsx)(s.code,{children:"fileSystemLookup: string => {exists: true, type: 'f'|'d', realPath: string} | {exists: false}"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Added in v0.81.0"})}),"\n",(0,i.jsxs)(s.p,{children:['Return information about the given absolute or project-relative path, following symlinks. A file "exists" if and only if it is watched, and a directory must be non-empty. The returned ',(0,i.jsx)(s.code,{children:"realPath"})," is real and absolute."]}),"\n",(0,i.jsx)(s.p,{children:"By default, Metro implements this by consulting an in-memory map of the filesystem that has been prepared in advance. This approach avoids disk I/O during module resolution and performs realpath resolution at negligible additional cost."}),"\n",(0,i.jsx)(s.h4,{id:"nodemodulespaths-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"nodeModulesPaths: $ReadOnlyArray<string>"})}),"\n",(0,i.jsxs)(s.p,{children:["A list of paths to check for modules after looking through all ",(0,i.jsx)(s.code,{children:"node_modules"})," directories."]}),"\n",(0,i.jsxs)(s.p,{children:["By default this is set to ",(0,i.jsx)(s.a,{href:"/docs/configuration#nodemodulespaths",children:(0,i.jsx)(s.code,{children:"resolver.nodeModulesPaths"})})]}),"\n",(0,i.jsx)(s.h4,{id:"prefernativeplatform-boolean",children:(0,i.jsx)(s.code,{children:"preferNativePlatform: boolean"})}),"\n",(0,i.jsxs)(s.p,{children:["If ",(0,i.jsx)(s.code,{children:"true"}),", try ",(0,i.jsx)(s.code,{children:".native.${ext}"})," before ",(0,i.jsx)(s.code,{children:".${ext}"})," and after ",(0,i.jsx)(s.code,{children:".${platform}.${ext}"})," during resolution. Metro sets this to ",(0,i.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,i.jsxs)(s.h4,{id:"redirectmodulepath-string--string--false-deprecated",children:[(0,i.jsx)(s.code,{children:"redirectModulePath: string => string | false"})," ",(0,i.jsx)("div",{class:"label deprecated",children:"Deprecated"})]}),"\n",(0,i.jsxs)(s.p,{children:["The default implementation of this function is specified by ",(0,i.jsx)(s.a,{href:"#browser_spec_redirection",children:(0,i.jsx)(s.strong,{children:"BROWSER_SPEC_REDIRECTION"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Metro's default resolver does not call this function, instead using the ",(0,i.jsx)(s.a,{href:"#browser_spec_redirection",children:(0,i.jsx)(s.strong,{children:"BROWSER_SPEC_REDIRECTION"})})," implementation directly. It is exposed here for backwards-compatible use by custom resolvers, but is considered deprecated and will be removed in a future release."]}),"\n",(0,i.jsx)(s.h4,{id:"resolveasset-dirpath-string-assetname-string-extension-string--readonlyarraystring",children:(0,i.jsx)(s.code,{children:"resolveAsset: (dirPath: string, assetName: string, extension: string) => ?$ReadOnlyArray<string>"})}),"\n",(0,i.jsxs)(s.p,{children:["Given a directory path, the base asset name and an extension, returns a list of all the asset file names that match the given base name in that directory, or ",(0,i.jsx)(s.code,{children:"null"})," if no such files are found. The default implementation considers each of ",(0,i.jsx)(s.a,{href:"/docs/configuration#assetresolutions",children:(0,i.jsx)(s.code,{children:"resolver.assetResolutions"})})," and uses the ",(0,i.jsx)(s.code,{children:"${assetName}@${resolution}${extension}"})," format for asset variant file names."]}),"\n",(0,i.jsxs)(s.p,{children:["See also ",(0,i.jsx)(s.a,{href:"https://reactnative.dev/docs/images#static-image-resources",children:"Static Image Resources"})," in the React Native docs."]}),"\n",(0,i.jsx)(s.h4,{id:"sourceexts-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"sourceExts: $ReadOnlyArray<string>"})}),"\n",(0,i.jsxs)(s.p,{children:["The list of file extensions to try, in order, when resolving a module path that does not exist on disk. Defaults to ",(0,i.jsx)(s.a,{href:"/docs/configuration#sourceexts",children:(0,i.jsx)(s.code,{children:"resolver.sourceExts"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"mainfields-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"mainFields: $ReadOnlyArray<string>"})}),"\n",(0,i.jsxs)(s.p,{children:["The ordered list of fields in ",(0,i.jsx)(s.code,{children:"package.json"})," that should be read to resolve a package's main entry point (and any subpath file replacements) per the ",(0,i.jsx)(s.a,{href:"https://github.com/defunctzombie/package-browser-field-spec",children:'"browser" field spec'}),". Defaults to ",(0,i.jsx)(s.a,{href:"/docs/configuration#resolvermainfields",children:(0,i.jsx)(s.code,{children:"resolver.resolverMainFields"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"getpackage-string--packagejson",children:(0,i.jsx)(s.code,{children:"getPackage: string => PackageJson"})}),"\n",(0,i.jsxs)(s.p,{children:["Given the path to a ",(0,i.jsx)(s.code,{children:"package.json"})," file, returns the parsed file contents."]}),"\n",(0,i.jsxs)(s.h4,{id:"getpackageformodule-absolutemodulepath-string--packageinfo-deprecated",children:[(0,i.jsx)(s.code,{children:"getPackageForModule: (absoluteModulePath: string) => ?PackageInfo"})," ",(0,i.jsx)("div",{class:"label deprecated",children:"Deprecated"})]}),"\n",(0,i.jsxs)(s.p,{children:["Given a candidate absolute module path that may exist under a package, locates and returns the closest package root (working upwards from the given path, stopping at the nearest ",(0,i.jsx)(s.code,{children:"node_modules"}),"), parsed ",(0,i.jsx)(s.code,{children:"package.json"})," contents, and the package-relative path of the given path."]}),"\n",(0,i.jsx)(s.h4,{id:"isesmimport-boolean",children:(0,i.jsx)(s.code,{children:"isESMImport?: boolean"})}),"\n",(0,i.jsx)(s.p,{children:'Whether the dependency to be resolved was declared with an ESM import, ("import x from \'y\'" or "await import(\'z\')"), or a CommonJS "require". Corresponds to the criteria Node.js uses to assert an "import" resolution condition, vs "require".'}),"\n",(0,i.jsx)(s.p,{children:"Always equal to dependency.data.isESMImport where dependency is provided, but may be used for resolution."}),"\n",(0,i.jsx)(s.h4,{id:"resolvehastemodule-string--string",children:(0,i.jsx)(s.code,{children:"resolveHasteModule: string => ?string"})}),"\n",(0,i.jsxs)(s.p,{children:["Resolves a Haste module name to an absolute path. Returns ",(0,i.jsx)(s.code,{children:"null"})," if no such module exists."]}),"\n",(0,i.jsxs)(s.p,{children:["The default implementation of this function uses ",(0,i.jsx)(s.a,{href:"https://www.npmjs.com/package/metro-file-map",children:"metro-file-map"}),"'s ",(0,i.jsx)(s.code,{children:"getModule"})," method."]}),"\n",(0,i.jsx)(s.h4,{id:"resolvehastepackage-string--string",children:(0,i.jsx)(s.code,{children:"resolveHastePackage: string => ?string"})}),"\n",(0,i.jsxs)(s.p,{children:["Resolves a Haste (global) package name to an absolute ",(0,i.jsx)(s.code,{children:"package.json"})," path. Returns ",(0,i.jsx)(s.code,{children:"null"})," if no such package exists."]}),"\n",(0,i.jsxs)(s.p,{children:["The default implementation of this function uses ",(0,i.jsx)(s.a,{href:"https://www.npmjs.com/package/metro-file-map",children:"metro-file-map"}),"'s ",(0,i.jsx)(s.code,{children:"getPackage"})," method and can be turned on or off using ",(0,i.jsx)(s.a,{href:"/docs/configuration#enableglobalpackages",children:(0,i.jsx)(s.code,{children:"resolver.enableGlobalPackages"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"allowhaste-boolean",children:(0,i.jsx)(s.code,{children:"allowHaste: boolean"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"true"})," if Haste resolutions are allowed in the current context, ",(0,i.jsx)(s.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(s.h4,{id:"disablehierarchicallookup-boolean",children:(0,i.jsx)(s.code,{children:"disableHierarchicalLookup: boolean"})}),"\n",(0,i.jsxs)(s.p,{children:["If ",(0,i.jsx)(s.code,{children:"true"}),", the resolver should not perform lookup in ",(0,i.jsx)(s.code,{children:"node_modules"})," directories per the Node resolution algorithm. Defaults to ",(0,i.jsx)(s.a,{href:"/docs/configuration#disablehierarchicallookup",children:(0,i.jsx)(s.code,{children:"resolver.disableHierarchicalLookup"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"extranodemodules-string-string",children:(0,i.jsx)(s.code,{children:"extraNodeModules: ?{[string]: string}"})}),"\n",(0,i.jsxs)(s.p,{children:["A mapping of package names to directories that is consulted after the standard lookup through ",(0,i.jsx)(s.code,{children:"node_modules"})," as well as any ",(0,i.jsx)(s.a,{href:"#nodemodulespaths-readonlyarraystring",children:(0,i.jsx)(s.code,{children:"nodeModulesPaths"})}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"originmodulepath-string",children:(0,i.jsx)(s.code,{children:"originModulePath: string"})}),"\n",(0,i.jsxs)(s.p,{children:["The path to the current module, e.g. the one containing the ",(0,i.jsx)(s.code,{children:"import"})," we are currently resolving."]}),"\n",(0,i.jsx)(s.h4,{id:"customresolveroptions-string-mixed",children:(0,i.jsx)(s.code,{children:"customResolverOptions: {[string]: mixed}"})}),"\n",(0,i.jsxs)(s.p,{children:["Any custom options passed to the resolver. By default, Metro populates this based on URL parameters in the bundle request, e.g. ",(0,i.jsx)(s.code,{children:"http://localhost:8081/index.bundle?resolver.key=value"})," becomes ",(0,i.jsx)(s.code,{children:"{key: 'value'}"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"resolverequest-customresolver",children:(0,i.jsx)(s.code,{children:"resolveRequest: CustomResolver"})}),"\n",(0,i.jsxs)(s.p,{children:["A alternative resolver function to which the current request may be delegated. Defaults to ",(0,i.jsx)(s.a,{href:"/docs/configuration#resolvereqeuest",children:(0,i.jsx)(s.code,{children:"resolver.resolveRequest"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Metro expects ",(0,i.jsx)(s.code,{children:"resolveRequest"})," to have the following signature:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-flow",children:"function resolveRequest(\n  context: ResolutionContext,\n  moduleName: string,\n  platform: string | null,\n): Resolution {\n  // ...\n}\n\ntype Resolution =\n  | {type: 'empty'}\n  | {type: 'sourceFile', filePath: string}\n  | {type: 'assetFiles', filePaths: $ReadOnlyArray<string>};\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Returned paths (",(0,i.jsx)(s.code,{children:"filePath"})," and ",(0,i.jsx)(s.code,{children:"filePaths"}),") must be ",(0,i.jsx)(s.em,{children:"absolute"})," and ",(0,i.jsx)(s.em,{children:"real"}),", such as the ",(0,i.jsx)(s.code,{children:"realPath"})," returned by  ",(0,i.jsx)(s.a,{href:"#filesystemlookup-string--exists-true-type-fd-realpath-string--exists-false",children:(0,i.jsx)(s.code,{children:"fileSystemLookup"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["When calling the default resolver with a non-null ",(0,i.jsx)(s.code,{children:"resolveRequest"})," function, it represents a custom resolver and will always be called, fully replacing the default resolution logic."]}),"\n",(0,i.jsxs)(s.p,{children:["Inside a custom resolver, ",(0,i.jsx)(s.code,{children:"resolveRequest"})," is set to the default resolver function, for easy chaining and customization."]}),"\n",(0,i.jsx)(s.h4,{id:"dependency-dependency",children:(0,i.jsx)(s.code,{children:"dependency: ?Dependency"})}),"\n",(0,i.jsxs)(s.p,{children:["A dependency descriptor corresponding to the current resolution request. This is provided for diagnostic purposes ",(0,i.jsx)(s.em,{children:"only"})," and may not be used for semantic purposes. See the ",(0,i.jsx)(s.a,{href:"#caching",children:"Caching"})," section for more information."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-flow",children:"type Dependency = {\n  // The literal name provided to a require or import call. For example 'foo' in\n  // case of `require('foo')`.\n  name: string,\n\n  data: {\n    // A locally unique key for this dependency within the origin module.\n    key: string,\n\n    // Source locations from the Babel AST, relative to the origin module, where\n    // this dependency was encountered. This may be an empty array.\n    locs: $ReadOnlyArray<BabelSourceLocation>,\n\n    asyncType: 'async' | 'prefetch' | 'weak' | null,\n\n    // Other properties are considered internal and may change in the future.\n    ...\n  },\n};\n"})}),"\n",(0,i.jsx)(s.h2,{id:"caching",children:"Caching"}),"\n",(0,i.jsx)(s.p,{children:"Resolver results may be cached under the following conditions:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["For given origin module paths ",(0,i.jsx)(s.em,{children:"A"})," and ",(0,i.jsx)(s.em,{children:"B"})," and target module name ",(0,i.jsx)(s.em,{children:"M"}),", the resolution for ",(0,i.jsx)(s.em,{children:"M"})," may be reused if ",(0,i.jsx)(s.strong,{children:"all"})," of the following conditions hold:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"A"})," and ",(0,i.jsx)(s.em,{children:"B"})," are in the same directory."]}),"\n",(0,i.jsxs)(s.li,{children:["The contents of ",(0,i.jsx)(s.a,{href:"#dev",children:(0,i.jsx)(s.code,{children:"dev"})})," and ",(0,i.jsx)(s.a,{href:"#customresolveroptions-string-mixed",children:(0,i.jsx)(s.code,{children:"customResolverOptions"})})," are equivalent ( = serialize to JSON the same) in both calls to the resolver."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Any cache of resolutions must be invalidated if any file in the project has changed."}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Custom resolvers must adhere to these assumptions, e.g. they may not return different resolutions for origin modules in the same directory under the same ",(0,i.jsx)(s.code,{children:"customResolverOptions"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);