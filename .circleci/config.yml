version: 2.1

commands:
  yarn_install:
    description: "A wrapper to yarn install with caching"
    parameters:
      working_directory:
        type: string
        default: ""
    steps:
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
            # Fallback in case checksum fails
            - dependencies-{{ .Branch }}-
      - run:
          name: Installing dependencies
          command: NPM_TOKEN= yarn --no-progress
          working_directory: << parameters.working_directory >>
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

  yarn_run:
    description: "A wrapper to execute yarn commands in a safe way"
    parameters:
      working_directory:
        type: string
        default: ""
      command:
        type: string
    steps:
      - run:
          command: NPM_TOKEN= yarn run << parameters.command >>
          working_directory: << parameters.working_directory >>

jobs:
  run-js-checks:
    docker:
      - image: cimg/node:14.17
    steps:
      - checkout
      - yarn_install
      - yarn_run:
          command: test-ci
      - yarn_run:
          command: test-smoke

  test-node-14:
    docker:
      - image: cimg/node:14.17
    steps:
      - checkout
      - yarn_install
      - yarn_run:
          command: jest --ci --maxWorkers 4 --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./reports/

  publish-to-npm:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - yarn_install
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: npm run publish
      - run: rm ~/.npmrc

# Workflows enables us to run multiple jobs in parallel
workflows:
  build-and-deploy:
    jobs:
      - run-js-checks
      - test-node-14
      - publish-to-npm:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
