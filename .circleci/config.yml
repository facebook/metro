# CircleCI configuration
# https://circleci.com/docs/configuration-reference/

version: 2.1

orbs:
  win: circleci/windows@2.4.0

references:
  # For stability, Node.js versions we run against in CI are defined explicitly
  # (the "lts" alias may bring in a future version before we support it)
  node_supported_lts_versions: &node_supported_lts_versions
    - &node_min_supported_version "14.17"
    - "16.18"
    - "18.12"
  node_lts_image: &node_lts_image cimg/node:18.12

  secure_unset_publish_token: &secure_unset_publish_token
    environment:
      NPM_TOKEN: ""

commands:
  yarn_install:
    description: "A wrapper to yarn install with caching"
    parameters:
      working_directory:
        type: string
        default: ""
    steps:
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - dependencies-{{ .Branch }}-
      - run:
          name: Installing dependencies
          command: yarn --frozen-lockfile --non-interactive
          working_directory: << parameters.working_directory >>
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

  install_and_run_tests:
    description: |
      Install dependencies and run tests (common steps for test-<platform> jobs)
    steps:
      - yarn_install
      - run: yarn jest --ci --maxWorkers 4 --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./reports/

jobs:
  run-js-checks:
    <<: *secure_unset_publish_token
    docker:
      - image: *node_lts_image
    steps:
      - checkout
      - yarn_install
      - run: yarn typecheck
      - run: yarn lint
      - run: yarn test-smoke

  test-with-coverage:
    <<: *secure_unset_publish_token
    docker:
      - image: *node_lts_image
    steps:
      - checkout
      - yarn_install
      - run: yarn test-coverage
      - run:
          name: Download Codecov Uploader
          command: ./.circleci/scripts/install_codecov.sh
      - run:
          name: Upload coverage results
          command: ./codecov -t ${CODECOV_TOKEN} -f ./coverage/coverage-final.json

  test-linux:
    <<: *secure_unset_publish_token
    parameters:
      node-version:
        type: string
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - checkout
      - install_and_run_tests

  test-windows:
    <<: *secure_unset_publish_token
    parameters:
      node-version:
        type: string
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          name: Install Node.js and Yarn
          command: |
            choco install -y nodejs --version << parameters.node-version >>
            choco install -y yarn
      - install_and_run_tests

  publish-to-npm:
    docker:
      - image: *node_lts_image
    steps:
      - checkout
      - yarn_install
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: npm run publish
      - run: rm ~/.npmrc

workflows:
  build-and-deploy:
    jobs:
      - run-js-checks
      - test-with-coverage
      - test-linux:
          matrix:
            parameters:
              node-version: *node_supported_lts_versions
      - test-windows:
          matrix:
            parameters:
              node-version: [*node_min_supported_version]
          filters:
            branches:
              only: /windows\/.*/
      - publish-to-npm:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
